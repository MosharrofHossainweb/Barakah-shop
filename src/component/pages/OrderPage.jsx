import React, { useState, useEffect } from "react";
import { useLocation, useNavigate } from "react-router-dom";
import { useThemeContext } from "../../context/ThemeProvider";
import Navber from "../Navber/Navber";

const OrderPage = () => {
  const { mode } = useThemeContext();
  const isLight = mode === "light";
  const location = useLocation();
  const navigate = useNavigate();

  const { product, size, color: initialColor, quantity, address: passedAddress } =
    location.state || {};

  const [name, setName] = useState("");
  const [phone, setPhone] = useState("");
  const [address, setAddress] = useState(passedAddress || "");
  const [qty, setQty] = useState(quantity || 1);
  const [color, setColor] = useState(initialColor || "");
  const [deliveryCharge, setDeliveryCharge] = useState(0);

  // Load saved data
  useEffect(() => {
    const savedName = localStorage.getItem("customer_name");
    const savedPhone = localStorage.getItem("customer_phone");
    const savedAddress = localStorage.getItem("customer_address");

    if (savedName) setName(savedName);
    if (savedPhone) setPhone(savedPhone);
    if (!address && savedAddress) setAddress(savedAddress);
  }, []);

  // Detect Dhaka / Outside Dhaka
  useEffect(() => {
    if (address) {
      const isDhaka =
        address.toLowerCase().includes("dhaka") ||
        address.toLowerCase().includes("ржврж╛ржХрж╛");
      setDeliveryCharge(isDhaka ? 60 : 110);
    } else {
      setDeliveryCharge(0);
    }
  }, [address]);

  if (!product)
    return (
      <p
        className={`${isLight ? "text-gray-800" : "text-gray-100"} text-center mt-10`}
      >
        ржХрзЛржирзЛ ржкрзНрж░рзЛржбрж╛ржХрзНржЯ рж╕рж┐рж▓рзЗржХрзНржЯ ржХрж░рж╛ рж╣рзЯржирж┐ред
      </p>
    );

  const basePrice = product.discount ? product.discount_price : product.price_in_tk;
  const subtotal = basePrice * qty;
  const total = subtotal + deliveryCharge;

  const message = `ЁЯЫТ *New Order* ЁЯЫТ

ЁЯСд Name: ${name || "Not provided"}
ЁЯУЮ Phone: ${phone || "Not provided"}
ЁЯПа Address: ${address || "Not provided"}

ЁЯУж Product: ${product.product_name}
ЁЯЖФ Code: ${product.sku}
ЁЯУП Size: ${size || "N/A"}
ЁЯОи Color: ${color || "N/A"}
ЁЯФв Quantity: ${qty}

ЁЯТ╕ Subtotal: ${subtotal}рз│
ЁЯЪЪ Delivery Charge: ${deliveryCharge}рз│
ЁЯТ░ Total: ${total}рз│`;

  const handleWhatsApp = () => {
    if (!name || !phone || !address) {
      alert("тЪая╕П ржЕржирзБржЧрзНрж░рж╣ ржХрж░рзЗ ржирж╛ржо, ржлрзЛржи ржУ ржарж┐ржХрж╛ржирж╛ ржкрзВрж░ржг ржХрж░рзБржиред");
      return;
    }
    if (!color) {
      alert("ЁЯОи ржЕржирзБржЧрзНрж░рж╣ ржХрж░рзЗ ржХрж╛рж▓рж╛рж░ рж╕рж┐рж▓рзЗржХрзНржЯ ржХрж░рзБржиред");
      return;
    }

    localStorage.setItem("customer_name", name);
    localStorage.setItem("customer_phone", phone);
    localStorage.setItem("customer_address", address);

    const url = `https://wa.me/8801617555633?text=${encodeURIComponent(message)}`;
    window.open(url, "_blank");
  };

  return (
    <>
      <Navber />
      <div className={`${isLight ? "bg-gray-100" : "bg-gray-900"} min-h-screen`}>
        <div className="container mx-auto px-5 md:px-0 py-10">
          <div className="max-w-3xl mx-auto bg-white dark:bg-gray-800 p-8 rounded-2xl shadow-xl">
            <h1 className="text-2xl font-bold mb-6 text-gray-800 dark:text-gray-100 text-center">
              ржЖржкржирж╛рж░ ржЕрж░рзНржбрж╛рж░ ржХржиржлрж╛рж░рзНржо ржХрж░рзБржи
            </h1>

            <div className="flex flex-col md:flex-row gap-5 items-center border-b pb-5 mb-6">
              <img
                src={product.image}
                alt={product.product_name}
                className="w-28 h-28 object-cover rounded-lg shadow-md"
              />
              <div className="flex flex-col gap-2 text-gray-800 dark:text-gray-100">
                <h2 className="text-lg font-semibold">{product.product_name}</h2>
                <p><span className="font-medium">ржХрзЛржб:</span> {product.sku}</p>
                <p><span className="font-medium">рж╕рж╛ржЗржЬ:</span> {size || "N/A"}</p>
                <p><span className="font-medium">ржХрж╛рж▓рж╛рж░:</span> {color || "N/A"}</p>
                <p>
                  <span className="font-medium">ржжрж╛ржо:</span> {basePrice}рз│
                </p>
              </div>
            </div>

            {/* Order Form */}
            <div className="flex flex-col gap-5">
              <input
                type="text"
                placeholder="ржЖржкржирж╛рж░ ржирж╛ржо"
                value={name}
                onChange={(e) => setName(e.target.value)}
                className="border rounded-lg px-4 py-3 dark:bg-gray-700 dark:text-gray-100"
              />
              <input
                type="tel"
                placeholder="ржлрзЛржи ржиржорзНржмрж░"
                value={phone}
                onChange={(e) => setPhone(e.target.value)}
                className="border rounded-lg px-4 py-3 dark:bg-gray-700 dark:text-gray-100"
              />
              <textarea
                placeholder="ржбрзЗрж▓рж┐ржнрж╛рж░рж┐ ржарж┐ржХрж╛ржирж╛"
                rows={3}
                value={address}
                onChange={(e) => setAddress(e.target.value)}
                className="border rounded-lg px-4 py-3 dark:bg-gray-700 dark:text-gray-100"
              ></textarea>

              <input
                type="number"
                min={1}
                value={qty}
                onChange={(e) => setQty(Number(e.target.value))}
                className="border rounded-lg px-4 py-3 dark:bg-gray-700 dark:text-gray-100"
              />

              <div className="bg-amber-50 dark:bg-gray-700 p-4 rounded-lg border">
                <p className="text-gray-800 dark:text-gray-100 font-medium">
                  ЁЯЯв ржЖржЧрж╛ржо ржХрзЛржирзЛ ржЯрж╛ржХрж╛ ржжрж┐рждрзЗ рж╣ржмрзЗ ржирж╛ред ржкржгрзНржп рж╣рж╛рждрзЗ ржкрзЗрзЯрзЗ ржжрзЗржЦрзЗ ржорзВрж▓рзНржп ржкрж░рж┐рж╢рзЛржз ржХрж░рждрзЗ ржкрж╛рж░ржмрзЗржиред
                </p>
                <p className="text-gray-800 dark:text-gray-100 mt-1">
                  ЁЯЪЪ ржврж╛ржХрж╛рж░ ржнрж┐рждрж░рзЗ ржбрзЗрж▓рж┐ржнрж╛рж░рж┐ ржЪрж╛рж░рзНржЬ: <span className="font-semibold">рзмрзжрз│</span> |
                  ржврж╛ржХрж╛рж░ ржмрж╛ржЗрж░рзЗ: <span className="font-semibold">рззрззрзжрз│</span>
                </p>
              </div>

              <div className="bg-gray-50 dark:bg-gray-700 p-4 rounded-lg border">
                <p className="text-red-600 dark:text-red-400 font-medium mb-2">
                  тД╣я╕П ржЙржкрж░рзЗрж░ рждржерзНржпржЧрзБрж▓рзЛ рж╕ржарж┐ржХ ржХрж┐ржирж╛ ржпрж╛ржЪрж╛ржЗ ржХрж░рзБржиред ржирж┐ржЪрзЗрж░ ржорзЗрж╕рзЗржЬржЯрж┐ WhatsApp-ржП ржкрж╛ржарж╛рж▓рзЗ ржЖржкржирж╛рж░ ржЕрж░рзНржбрж╛рж░ ржХржиржлрж╛рж░рзНржо рж╣ржмрзЗ тЬЕ
                </p>
                <pre className="text-sm whitespace-pre-wrap text-gray-800 dark:text-gray-100">
                  {message}
                </pre>
              </div>

              <button
                onClick={handleWhatsApp}
                className="w-full py-3 bg-green-500 text-white font-semibold rounded-lg hover:bg-green-600 transition"
              >
                WhatsApp ржП ржЕрж░рзНржбрж╛рж░ ржкрж╛ржарж╛ржи
              </button>

              <button
                onClick={() => navigate("/")}
                className="w-full py-3 bg-gray-300 dark:bg-gray-600 text-gray-900 dark:text-gray-100 font-semibold rounded-lg hover:bg-gray-400 dark:hover:bg-gray-500 transition"
              >
                рж╢ржкрж┐ржВ ржЪрж╛рж▓рж┐рзЯрзЗ ржпрж╛ржи
              </button>
            </div>
          </div>
        </div>
      </div>
    </>
  );
};

export default OrderPage;
